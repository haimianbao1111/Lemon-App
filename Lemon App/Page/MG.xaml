<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Class="Lemon_App.Page.MG"
        mc:Ignorable="d"
        Title="神•滑稽刷屏器" Height="240" Width="320" WindowStyle="None" ResizeMode="NoResize" Background="{x:Null}" AllowsTransparency="True" FontFamily=".PingFang SC,Microsoft YaHei UI" MouseLeftButtonDown="Window_MouseLeftButtonDown" Topmost="True" WindowStartupLocation="CenterScreen" ShowInTaskbar="False">
    <Window.Resources>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="#FFBBBBBB" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="l">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="280"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                <EasingThicknessKeyFrame KeyTime="0" Value="20,240,20,20"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="c">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="20,240,20,20"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource l}"/>
        </EventTrigger>
    </Window.Triggers>
    <Window.Effect>
        <DropShadowEffect BlurRadius="20" Opacity="0.4" ShadowDepth="0"/>
    </Window.Effect>
    <Grid x:Name="grid" Margin="20" Background="White" Width="280" Height="200" >
        <Grid.Clip>
            <RectangleGeometry RadiusX="3" RadiusY="3">
                <RectangleGeometry.Rect>
                    <Rect Width="280" Height="200"/>
                </RectangleGeometry.Rect>
            </RectangleGeometry>
        </Grid.Clip>
        <Grid >
            <Border Background="#E5FFFFFF" BorderBrush="#FFEAEAEA" CornerRadius="5" Margin="10,45,10,0" BorderThickness="1" Height="100" VerticalAlignment="Top">
                <TextBox x:Name="tx"   AcceptsReturn="True"  TextWrapping="Wrap" Text="刷屏内容:" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="#FF878787" BorderThickness="0" Margin="5" />
            </Border>
            <RadioButton x:Name="on" Content="使用Enter方法" HorizontalAlignment="Left" Height="15" Margin="13,150,0,0" VerticalAlignment="Top" Width="152" Foreground="#FF878787" IsChecked="True" BorderBrush="#FFBBBBBB" Style="{DynamicResource RadioButtonStyle1}"/>
            <RadioButton x:Name="tw" Content="使用Ctrl+Enter方法" HorizontalAlignment="Left" Height="15" Margin="143,150,0,0" VerticalAlignment="Top" Width="125" Foreground="#FF878787"  BorderBrush="#FFBBBBBB" Style="{DynamicResource RadioButtonStyle1}" RenderTransformOrigin="0.5,0.5"/>
            <Border Height="25" Margin="0,0,10,5.5" VerticalAlignment="Bottom" CornerRadius="5" Background="#FF3399FF" MouseDown="Border_MouseDown_1" HorizontalAlignment="Right" Width="60">
                <TextBlock x:Name="but" TextWrapping="Wrap" Text="开始" Foreground="White" TextAlignment="Center" FontSize="12" Margin="0,5,0,0"/>
            </Border>
            <Border Height="25" Background="#E5FFFFFF" BorderBrush="#FFDADADA" CornerRadius="5" Margin="10,169.5,75,5.5" BorderThickness="1">
                <Grid>
                    <TextBox x:Name="pl" DataObject.Pasting="textBox1_Pasting" PreviewKeyDown="textBox1_PreviewKeyDown" InputMethod.IsInputMethodEnabled="False"
                        PreviewTextInput="textBox1_PreviewTextInput" TextWrapping="NoWrap" Text="1000" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="#FF878787" BorderThickness="0" Margin="61,3.5,10,3.5" Height="16"/>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="NoWrap" Text="刷屏频率:" Margin="5,0,0,0" Foreground="#FF878787" Height="16"/>
                    <TextBlock x:Name="lx" TextWrapping="NoWrap" Text="毫秒" Margin="255,7,0,6" Foreground="#FF878787" MouseDown="TextBlock_MouseDown"/>
                </Grid>
            </Border>
        </Grid>
        <Grid Height="40" VerticalAlignment="Top" Background="#FFFAFAFA">
            <TextBlock x:Name="tit" Height="18" Margin="63,13,63,0" TextWrapping="Wrap" Text="神•滑稽刷屏器" VerticalAlignment="Top" Foreground="#FFCFCFCF" TextAlignment="Center"/>
            <Border Background="#FFEAEAEA" Height="1" VerticalAlignment="Bottom" Margin="0,0,0,-1"/>
            <Border x:Name="CLOSE" ToolTip="关闭" HorizontalAlignment="Left" Margin="5,14,0,0" Width="13" Height="13" Background="#FFFE5E56" CornerRadius="13" MouseDown="CLOSE_MouseDown" VerticalAlignment="Top"/>
            <Border x:Name="MIN" ToolTip="最大化" HorizontalAlignment="Left" Margin="25,14,0,0" Width="13" Height="13" Background="#FFFEBC2D" CornerRadius="13" VerticalAlignment="Top"/>
            <Border x:Name="MAX" ToolTip="最小化" Margin="45,14,0,0" Height="13" Background="#FF60C940" CornerRadius="13" VerticalAlignment="Top" HorizontalAlignment="Left" Width="13"/>
        </Grid>
    </Grid>
</Window>
