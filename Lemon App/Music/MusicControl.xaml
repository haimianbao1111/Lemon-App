<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lemon_App"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:system="clr-namespace:System;assembly=mscorlib" x:Name="user" x:Class="Lemon_App.MusicControl"
             mc:Ignorable="d" 
              Width="Auto" Height="Auto" Loaded="UserControl_Loaded" SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources>
        <!--笔刷-->
        <LinearGradientBrush x:Key="SliderBackground"  StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#59ccfc"/>
            <GradientStop Offset="0.5" Color="#00b3fe"/>
            <GradientStop Offset="1" Color="#59ccfc"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SliderThumb"  StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFD9D3E8"/>
            <!--<GradientStop Offset="1" Color="#dfdfdf"/>-->
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SliderText"  StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#7cce45"/>
            <GradientStop Offset="1" Color="#4ea017"/>
        </LinearGradientBrush>

        <!--Slider模板-->
        <Style x:Key="Slider_RepeatButton" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="{StaticResource SliderBackground}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Slider_RepeatButton1" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Slider_Thumb" TargetType="Thumb">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border Background="{StaticResource SliderBackground}"/>
                            <Border Grid.ColumnSpan="2" CornerRadius="4"  Background="{StaticResource SliderThumb}" Width="15">
                                <!--<TextBlock Text="||" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Slider_CustomStyle" TargetType="Slider">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>  
                                <ColumnDefinition Width="80"/>  
                                <ColumnDefinition/>  
                                <ColumnDefinition Width="40"/>  
                            </Grid.ColumnDefinitions>-->
                            <Grid.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="1" />
                            </Grid.Effect>
                            <!--<Border HorizontalAlignment="Right" BorderBrush="Gray" BorderThickness="1,1,0,1" Background="{StaticResource SliderText}" Width="80" CornerRadius="8,0,0,8"/>-->
                            <!--<Border Grid.Column="2" HorizontalAlignment="Right" BorderBrush="Gray" BorderThickness="0,1,1,1" Background="{StaticResource SliderText}" Width="40" CornerRadius="0,8,8,0"/>-->
                            <!--<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Tag}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>-->
                            <!--<TextBlock Grid.Column="2" Text="{Binding ElementName=PART_Track,Path=Value,StringFormat=\{0:N0\}}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" DataContext="{Binding}" />-->
                            <Border Grid.Column="1" BorderBrush="Gray" BorderThickness="1" CornerRadius="8,0,0,8">
                                <Track Grid.Column="1" Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource Slider_RepeatButton}"  
                                Command="Slider.DecreaseLarge"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource Slider_RepeatButton1}"  
                                Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource Slider_Thumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBoxItem" x:Key="S">
            <Style.Resources>
                <!--ListBox 选中一项时背景颜色-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <!--选中项失去焦点后的颜色-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            </Style.Resources>
        </Style>
        <Style  TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Width" Value="120"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseDown1">
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseMove2">
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseMove" SourceName="path">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="popup">
                                <BeginStoryboard x:Name="OnMouseMove2_BeginStoryboard" Storyboard="{StaticResource OnMouseMove2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                        <Border  BorderBrush="#FF31C27C" CornerRadius="5" Background="Transparent" BorderThickness="1">
                            <Grid>
                                <ToggleButton x:Name="path" ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto" Foreground="{x:Null}" Background="Transparent">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="Auto"/>
                                            <Setter Property="Background" Value="{x:Null}"/>
                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                                                <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </DockPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">

                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" Width="20" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False" TextAlignment="Center"/>
                                <Popup x:Name="popup" HorizontalOffset="-2.5" Focusable="False"    PopupAnimation="Slide" AllowsTransparency="True" Placement="Top" local:PopopHelper.PopupPlacementTarget="{Binding ElementName=path}">
                                    <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                        <Border  BorderThickness="1,1,1,1" BorderBrush="#FF31C27C" HorizontalAlignment="Stretch" CornerRadius="5">
                                            <Border.Background>
                                                <SolidColorBrush Color="#FFF1F2F6" />
                                            </Border.Background>
                                        </Border>
                                        <ScrollViewer  Style="{StaticResource for_scrollviewer}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Pink"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Gray"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Red"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Green"/>
            </Style.Resources>
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer PanningMode="Both" Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource SCS}" ScrollChanged="ScrollViewer_ScrollChanged">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource ItemsPresenterStyle}" Margin="0,0,5,0"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ItemsPresenterStyle" TargetType="{x:Type ItemsPresenter}"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="#33FFFFFF" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#4C000000"  CornerRadius="5">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="#CCFFFFFF" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="White" BorderThickness="1" Background="White" CornerRadius="3">
                            <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource for_scrollviewer}">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Focusable="False"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                        <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </DockPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="Co" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="topStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border  BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="5" Background="#FFF1F3F7">
                            <Grid>
                                <ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto" Foreground="#FF3F3F46">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="Auto"/>
                                            <Setter Property="Background" Value="{x:Null}"/>
                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                                                <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </DockPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True"/>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False" Background="#FF54555B"/>
                                <Popup HorizontalOffset="-1" Width="{TemplateBinding ActualWidth}"
                                    IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False"    PopupAnimation="Slide" AllowsTransparency="True">
                                    <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                        <Border  BorderThickness="1,1,1,1" BorderBrush="#4C000000" HorizontalAlignment="Stretch" CornerRadius="5" Background="#FFF1F2F6"/>
                                        <ScrollViewer  Style="{StaticResource for_scrollviewer}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="C"  TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border  CornerRadius="5" Background="#FFEBECF1">
                            <Grid>
                                <ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto" Foreground="#FFB4B4C1" Background="#00000000">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="Auto"/>
                                            <Setter Property="Background" Value="{x:Null}"/>
                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                                                <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </DockPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True"/>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False"/>
                                <Popup HorizontalOffset="-1" Width="{TemplateBinding ActualWidth}"
                                    IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False"    PopupAnimation="Slide" AllowsTransparency="True">
                                    <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                        <Border  BorderThickness="1,1,1,1" BorderBrush="#FF31C27C" HorizontalAlignment="Stretch" CornerRadius="5" Background="#FFF1F2F6"/>
                                        <ScrollViewer  Style="{StaticResource for_scrollviewer}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault2" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal2" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent2}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent2}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault2}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical2" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" Background="#FFE6E6E6" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0" CornerRadius="2">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonStyle1}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent2}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18" Visibility="Hidden"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="s" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal2}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical2}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="{x:Null}" Height="{TemplateBinding ActualHeight}" VerticalAlignment="Top" Width="4" CornerRadius="2" Background="#FF31C27C" Margin="7,-4,8,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnMouseLeave1">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseMove1">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="RepeatButtonTransparent3" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault3" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal3" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent3}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent3}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault3}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault2" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="10" Height="10" Background="{x:Null}">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Stretch="Fill"/>
                <Border BorderBrush="{x:Null}" HorizontalAlignment="Left" Height="10" VerticalAlignment="Top" Width="10" Background="#FF31C27C" CornerRadius="10"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical3" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" Background="#FFE6E6E6" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0" CornerRadius="2">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent3}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent3}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault2}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="sh" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal3}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="OnMouseMove2"/>
        <Storyboard x:Key="OnMouseLeave2"/>
        <Style x:Key="ComboBoxStyle1"  TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseDown1">
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseMove2">
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border  BorderBrush="#00000000" CornerRadius="5" Background="Transparent" BorderThickness="1">
                            <Grid>
                                <ToggleButton x:Name="path" ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MinHeight="0" Width="Auto" Foreground="{x:Null}" Background="Transparent">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="Auto"/>
                                            <Setter Property="Background" Value="{x:Null}"/>
                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                                                <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </DockPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True"/>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False" TextAlignment="Center"/>
                                <Popup x:Name="popup" HorizontalOffset="-2.5" Focusable="False"    PopupAnimation="Slide" AllowsTransparency="True" Placement="Top" local:PopopHelper.PopupPlacementTarget="{Binding ElementName=path}" VerticalOffset="-5">
                                    <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                        <Border  BorderThickness="1,1,1,1" BorderBrush="#FF686868" HorizontalAlignment="Stretch" CornerRadius="5" Background="#FFF1F2F6"/>
                                        <ScrollViewer  Style="{StaticResource for_scrollviewer}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseMove" SourceName="path">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="popup">
                                <BeginStoryboard x:Name="OnMouseMove2_BeginStoryboard" Storyboard="{StaticResource OnMouseMove2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnMouseMove3">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup1">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.4" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave3">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup1">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseMove4">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup2">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave4">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup2">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="popup">
            <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseMove" SourceName="border">
            <BeginStoryboard x:Name="OnMouseMove1_BeginStoryboard" Storyboard="{StaticResource OnMouseMove1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseMove" SourceName="border1">
            <BeginStoryboard x:Name="OnMouseMove3_BeginStoryboard" Storyboard="{StaticResource OnMouseMove3}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="popup1">
            <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseMove" SourceName="border2">
            <BeginStoryboard x:Name="OnMouseMove4_BeginStoryboard" Storyboard="{StaticResource OnMouseMove4}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="popup2">
            <BeginStoryboard x:Name="OnMouseLeave4_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave4}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid x:Name="Cip">
        <Popup x:Name="popupop" Width="180" Height="100" AllowsTransparency="True" PopupAnimation="Fade" Placement="Right">
            <Border Background="White" CornerRadius="5">
                <Grid>
                    <TextBlock x:Name="download_name" Margin="10,10,10,60" TextWrapping="Wrap" Text="Name" Foreground="#FF1B1B1C" TextAlignment="Center"/>
                    <ProgressBar x:Name="p" Height="10" Margin="10,0" BorderBrush="#FF31C27C" Foreground="#FF31C27C" Background="White"/>
                    <Border x:Name="CLOSE" ToolTip="关闭" Height="13" Background="#FFFE5E56" CornerRadius="13" MouseDown="CLOSE_MouseDown" VerticalAlignment="Bottom" Width="13" Margin="0,0,0,10"/>
                </Grid>
            </Border>
        </Popup>
        <Grid x:Name="BackgroundContent"/>
        <Grid x:Name="ZjImAgE" Margin="0,0,0,70" Visibility="Collapsed">
            <TextBlock Height="25" Margin="0,5,10,0" TextWrapping="Wrap" Text="{Binding Text, ElementName=lrcname}" VerticalAlignment="Top" Foreground="#FF686868" FontSize="20" TextAlignment="Center"/>
            <TextBlock Height="19" Margin="0,30,10,0" TextWrapping="Wrap" Text="{Binding Text, ElementName=zk}" VerticalAlignment="Top" Foreground="#FF828282" FontSize="14" TextAlignment="Center"/>
            <Border x:Name="os" MaxWidth="250" MaxHeight="250"  Margin="0,54,0,0" CornerRadius="235" Background="{Binding Background, ElementName=tx}" RenderTransformOrigin="0.5,0.5" Height="{Binding ActualWidth, ElementName=os, Mode=OneWay}"/>
        </Grid>
        <Grid x:Name="G" Margin="0,0,0,70" Visibility="Collapsed">
            <Grid Margin="20,60,20,0" Background="#00000000" >
                <Canvas  x:Name="CanvasLyric" ClipToBounds="True">
                    <StackPanel x:Name="StackPanelCommonLyric"  Canvas.Left="0" Canvas.Top="300" Width="{Binding ActualWidth, ElementName=CanvasLyric, Mode=OneWay}" OpacityMask="Black" />
                    <Canvas x:Name="CanvasFocusLyric"  Height="72"  Canvas.Left="0" Canvas.Top="235" Width="{Binding ActualWidth, ElementName=CanvasLyric, Mode=OneWay}" OpacityMask="Black" ClipToBounds="True">
                        <TextBlock x:Name="TBFocusLyricBack" Text="小萌Music" Height="Auto" Width="{Binding ActualWidth, ElementName=CanvasLyric, Mode=OneWay}" FontSize="22" TextAlignment="Center" Foreground="White" OpacityMask="Black" TextWrapping="Wrap"/>
                        <Canvas x:Name="CanvasFocusLyricFore" Height="{Binding Height, ElementName=CanvasFocusLyric}" Width="30" ClipToBounds="True" OpacityMask="Black">
                            <TextBlock x:Name="TBFocusLyricFore" Text="{Binding Text, ElementName=TBFocusLyricBack}" Height="{Binding Height, ElementName=CanvasFocusLyric}" FontSize="{Binding FontSize, ElementName=TBFocusLyricBack}" TextAlignment="{Binding TextAlignment, ElementName=TBFocusLyricBack}" Foreground="#FF007ACC" FontFamily="{Binding FontFamily, ElementName=TBFocusLyricBack}" Width="{Binding ActualWidth, ElementName=CanvasLyric, Mode=OneWay}" Visibility="{Binding Visibility, ElementName=TBFocusLyricBack}" TextWrapping="{Binding TextWrapping, ElementName=TBFocusLyricBack}" TextTrimming="{Binding TextTrimming, ElementName=TBFocusLyricBack}" OpacityMask="Black" />
                        </Canvas>
                    </Canvas>
                </Canvas>
                <StackPanel Margin="28,254.024,23,2" x:Name="BaseLineSP">
                    <Line Stroke="#FF007ACC" StrokeThickness="2" StrokeDashArray="4,2" X1="0" X2="{Binding ActualWidth, ElementName=CanvasLyric}" Y2="0" x:Name="BaseLine" Visibility="Collapsed" OpacityMask="{x:Null}" Y1="0" Grid.ColumnSpan="2" Height="4" />
                    <!--TextBlock x:Name="tbDragTime" TextWrapping="Wrap" Text="0.00.00" TextAlignment="Left" Foreground="#FF007ACC" FontSize="18" Visibility="Collapsed" Width="{Binding ActualWidth, ElementName=CanvasLyric}" Background="#00000000" /-->
                </StackPanel>
            </Grid>
            <TextBlock x:Name="lrcname" Height="30" TextWrapping="Wrap" Text="小萌音乐" VerticalAlignment="Top" Width="Auto" Margin="10,10,10,0" Foreground="#FF686868" FontSize="22" TextAlignment="Center"/>
            <TextBlock x:Name="zk" Height="20" TextWrapping="Wrap" VerticalAlignment="Top" Width="Auto" Margin="10,35,10,0" Foreground="#FF969696" FontSize="16" TextAlignment="Center"><Run Text="歌手:" Foreground="#FFBDBDBD"/><Run Text="N\N  "/><Run Text="专辑:" Foreground="#FFBDBDBD"/><Run Text="N\N"/></TextBlock>
        </Grid>
        <Grid x:Name="h" Margin="0,0,0,70">
            <ListBox x:Name="listBox" Margin="0,45,0,0" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="#FFEEEEEE" SelectionChanged="listBox_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible" Style="{DynamicResource ListBoxStyle}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="#0C000000"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#19000000"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Grid Height="40" VerticalAlignment="Top">
                <Grid HorizontalAlignment="Right" Width="310">
                    <Border x:Name="border1" Height="27" Margin="137,8,10,5" VerticalAlignment="Stretch" Background="#FFF1F3F7" CornerRadius="10">
                        <Grid>
                            <Popup x:Name="popup1" Width="250" Height="200" AllowsTransparency="True" PopupAnimation="Fade" >
                                <Border Background="White" CornerRadius="5" Margin="10">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Color="#FF1B1B1C" ShadowDepth="2" Opacity="0.3"/>
                                    </Border.Effect>
                                    <Grid>
                                        <ScrollViewer Template="{DynamicResource SCS}">
                                            <WrapPanel x:Name="SearchDataContent"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Popup>
                            <TextBox x:Name="textBox" Margin="9,5,9,3" BorderThickness="0" Text="搜索" Background="{x:Null}" BorderBrush="{x:Null}" SelectionBrush="#FF31C27C" KeyDown="textBox_KeyDown" Foreground="#FF3F3F46"/>
                        </Grid>
                    </Border>
                    <Border HorizontalAlignment="Left" Height="26" Margin="107,8,0,0" VerticalAlignment="Top" Width="25" Background="#FFF1F3F7" CornerRadius="5" MouseDown="Border_MouseDown_2" ToolTip="我的收藏">
                        <Path Data="M92.361,35.955L67.95,30.352L52.814,7.012c-1.554-2.397-4.074-2.397-5.628,0L32.05,30.352   L7.639,35.955c-2.784,0.639-3.523,2.906-1.651,5.063l18.019,20.759l-2.757,25.916c-0.302,2.841,1.669,4.471,4.402,3.641L50,83.945   l24.347,7.39c2.733,0.83,4.704-0.801,4.402-3.641l-2.757-25.916l18.019-20.759C95.884,38.861,95.145,36.594,92.361,35.955z" Fill="#FFB4B4C1" Stretch="Uniform" StrokeThickness="0" Margin="4"/>
                    </Border>
                    <Border HorizontalAlignment="Left" Margin="74,8,0,0" Width="25" Background="#FFF1F3F7" CornerRadius="5" MouseDown="Border_MouseDown_3" ToolTip="我的收藏" Height="26" VerticalAlignment="Top">
                        <Path Data="M50.174,83.543L48.313,57.16C48.208,55.665,47.051,54.441,45.563,54.252L21.266,51.14 74.52,27.426 50.174,83.543z" Fill="#FFB4B4C1" Stretch="Uniform" StrokeThickness="0" Margin="4"/>
                    </Border>
                    <ComboBox x:Name="DF" HorizontalAlignment="Left" Margin="6,8,0,8" Width="63" Background="{x:Null}" BorderBrush="{x:Null}" SelectedIndex="0" Foreground="#FFB4B4C1" Style="{DynamicResource C}" FontSize="14" SelectionChanged="DF_SelectionChanged">
                        <ComboBoxItem Content="巅峰榜" ToolTip="巅峰榜" Foreground="#FF252526"/>
                        <ComboBoxItem Content="销量" ToolTip="23" Foreground="#FF252526"/>
                        <ComboBoxItem Content="热歌" ToolTip="26" Foreground="#FF252526"/>
                        <ComboBoxItem Content="摇滚" ToolTip="19" Foreground="#FF252526"/>
                        <ComboBoxItem Content="民谣" ToolTip="18" Foreground="#FF252526"/>
                        <ComboBoxItem Content="日本" ToolTip="17" Foreground="#FF252526"/>
                        <ComboBoxItem Content="韩国" ToolTip="16" Foreground="#FF252526"/>
                        <ComboBoxItem Content="内地" ToolTip="5" Foreground="#FF252526"/>
                        <ComboBoxItem Content="港台" ToolTip="6" Foreground="#FF252526"/>
                        <ComboBoxItem Content="欧美" ToolTip="3" Foreground="#FF252526"/>
                    </ComboBox>
                </Grid>
            </Grid>
            <Grid x:Name="DOWN" Margin="0,41,0,0" Visibility="Collapsed">
                <Border BorderThickness="1" Margin="69,42,70,148" Background="#33FFFFFF" CornerRadius="5">
                    <Grid>
                        <ProgressBar x:Name="PB" Height="13" Margin="10,44,10,0" VerticalAlignment="Top" Foreground="#FF3399FF" Background="White" BorderBrush="#FF3399FF"/>
                        <TextBlock x:Name="textBlock6" Height="17" Margin="10,62,10,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Foreground="#FF1B1B1C" TextAlignment="Center"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <Border Height="70" VerticalAlignment="Bottom" BorderBrush="#FFE6E6E6" BorderThickness="0,1,0,0">
            <Grid Background="#00000000">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="296*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="_PAGE" Width="Auto" Height="47" Margin="5,0">
                    <Border BorderThickness="2" CornerRadius="100" MouseDown="textBlock_MouseDown" BorderBrush="#FF31C27C" Background="#00000000" Height="30" Width="30">
                        <Path x:Name="s" Data="M40.2,3.8C36.4,0,30,2.7,30,8v112c0,5.3,6.4,8,10.2,4.2l56-56c2.3-2.3,2.3-6.1,0-8.4L40.2,3.8z" Stretch="Fill" Fill="#FF31C27C" Margin="6"/>
                    </Border>
                    <Border x:Name="H" BorderThickness="2" HorizontalAlignment="Left" Margin="0,12,0,10" Width="25" CornerRadius="100" MouseDown="Border_MouseDown_4" BorderBrush="#FF31C27C" Background="#00000000" Height="25">
                        <Path x:Name="s1" Data="M29,2L17,2C13.7,2,11,4.7,11,8L11,120C11,123.3,13.7,126,17,126L29,126C32.3,126,35,123.3,35,120L35,8C35,4.7,32.3,2,29,2z M117,120V8c0-5.3-6.6-8-10.4-4.2l-56.1,56c-2.3,2.3-2.4,6.1,0,8.4l56.2,56C110.4,128,117,125.3,117,120z" Stretch="Fill" Fill="#FF31C27C" Margin="5"/>
                    </Border>
                    <Border x:Name="Q" BorderThickness="2" HorizontalAlignment="Left" Margin="65,12,0,10" Width="25" CornerRadius="100" MouseDown="Border_MouseDown_6" BorderBrush="#FF31C27C" Background="#00000000" Height="25">
                        <Path x:Name="s2" Data="M111,2H99c-3.3,0-6,2.7-6,6v112c0,3.3,2.7,6,6,6h12c3.3,0,6-2.7,6-6V8C117,4.7,114.3,2,111,2z M77.6,68.2c2.3-2.3,2.3-6.1,0-8.4l-56.2-56C17.6,0,11,2.7,11,8v112c0,5.3,6.6,8,10.4,4.2L77.6,68.2z" Stretch="Fill" Fill="#FF31C27C" Margin="5"/>
                    </Border>
                </Grid>
                <Grid x:Name="__PAGE" Margin="0,0,5,0" Height="25" Grid.Column="2">
                    <Border x:Name="border2"  HorizontalAlignment="Left" Margin="70,0,0,0" Width="20" Background="#00000000" CornerRadius="5" ToolTip="桌面歌词" BorderBrush="#00000000" Height="20" MouseDown="Border_MouseDown_5">
                        <Grid>
                            <Popup x:Name="popup2" Width="70" Height="80" AllowsTransparency="True" PopupAnimation="Fade">
                                <Border Background="White" CornerRadius="5" Margin="5">
                                    <Border.Effect>
                                        <DropShadowEffect Opacity="0.3"/>
                                    </Border.Effect>
                                    <Border Width="50" Height="30" Background="#FF007ACC" CornerRadius="5" MouseDown="Border_MouseDown_7">
                                        <TextBlock TextWrapping="NoWrap" Text="下载目录" Foreground="White" Margin="0,9,0,1" TextAlignment="Center"/>
                                    </Border>
                                </Border>
                            </Popup>
                            <Path Data="M60.101,2.007c-0.59-0.127-1.205,0.023-1.673,0.403c-0.468,0.38-0.74,0.951-0.74,1.554v8.225
	c0,0.911,0.616,1.708,1.498,1.936C75.297,18.3,86.549,32.842,86.549,49.488c0,20.153-16.396,36.549-36.549,36.549
	S13.451,69.642,13.451,49.488c0-16.646,11.252-31.188,27.363-35.363c0.882-0.229,1.498-1.025,1.498-1.936V3.964
	c0-0.603-0.272-1.174-0.74-1.554s-1.082-0.528-1.673-0.403C17.621,6.716,1.451,26.685,1.451,49.488
	c0,26.77,21.779,48.549,48.549,48.549s48.549-21.779,48.549-48.549C98.549,26.685,82.379,6.716,60.101,2.007z" Fill="#FFA0A0A0" Stretch="Uniform" StrokeThickness="0" Margin="3"/>
                        </Grid>
                    </Border>
                    <Border HorizontalAlignment="Left" Width="20" Height="20" Background="#00000000" CornerRadius="3" ToolTip="添加到收藏" BorderBrush="#00000000" Margin="50,0,0,0" MouseDown="Border_MouseDown_1" MouseMove="Border_MouseMove" MouseLeave="Border_MouseLeave">
                        <Grid>
                            <Path StrokeThickness="0" Margin="2" Fill="#FFA0A0A0" Data="M56.14,28.375H35.274V7.506c0-1.809-1.462-3.271-3.274-3.271c-1.811,0-3.274,1.463-3.274,3.271v20.869H7.862  c-1.813,0-3.274,1.464-3.274,3.272c0,1.807,1.462,3.27,3.274,3.27h20.863v20.869c0,1.809,1.464,3.272,3.274,3.272  c1.813,0,3.274-1.464,3.274-3.272V34.918H56.14c1.811,0,3.272-1.463,3.272-3.27C59.412,29.839,57.95,28.375,56.14,28.375z" Stretch="Fill" ToolTip="添加到收藏"/>
                            <Popup x:Name="pu" Height="200" Width="200" Placement="Top" AllowsTransparency="True" PopupAnimation="Fade" HorizontalOffset="-100" VerticalOffset="-20">
                                <Popup.Effect>
                                    <DropShadowEffect Opacity="0.3" ShadowDepth="0"/>
                                </Popup.Effect>
                                <Border Margin="10" Background="White" BorderBrush="#FFD6D6D6" BorderThickness="2" CornerRadius="5">
                                    <Grid>
                                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Top" Foreground="#FF8F8F8F" Height="34" TextAlignment="Center" FontSize="14" Margin="0,5,0,0"><Run Text="扫描二维码，在手机上听"/></TextBlock>
                                        <Border x:Name="q2code" BorderBrush="#FFB8B8B8" BorderThickness="1" Width="125" Height="125" Margin="0,20,0,0"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <Border x:Name="border" HorizontalAlignment="Left" Width="20" Height="20" CornerRadius="3" Margin="30,0,0,0" Background="#00000000" BorderBrush="#00000000">
                        <Grid x:Name="CB">
                            <Path x:Name="path" Margin="2" Data="M57.375,52c0-3.727-2.781-6.809-6.375-7.299V26.879h-2v17.822c-3.594,0.49-6.375,3.572-6.375,7.299
		s2.781,6.809,6.375,7.299v14.904h2V59.299C54.594,58.809,57.375,55.727,57.375,52z M50,57.375c-2.964,0-5.375-2.411-5.375-5.375
		s2.411-5.375,5.375-5.375s5.375,2.411,5.375,5.375S52.964,57.375,50,57.375z M70.125,61c0-3.727-2.781-6.809-6.375-7.299V26.879h-2v26.822c-3.594,0.49-6.375,3.572-6.375,7.299
		s2.781,6.809,6.375,7.299v5.904h2v-5.904C67.344,67.809,70.125,64.727,70.125,61z M62.75,66.375c-2.964,0-5.375-2.411-5.375-5.375
		s2.411-5.375,5.375-5.375s5.375,2.411,5.375,5.375S65.714,66.375,62.75,66.375z M44.625,39c0-3.727-2.781-6.809-6.375-7.299v-4.822h-2v4.822c-3.594,0.49-6.375,3.572-6.375,7.299s2.781,6.809,6.375,7.299
		v27.904h2V46.299C41.844,45.809,44.625,42.727,44.625,39z M37.25,44.375c-2.964,0-5.375-2.411-5.375-5.375s2.411-5.375,5.375-5.375
		s5.375,2.411,5.375,5.375S40.214,44.375,37.25,44.375z" Stretch="Fill" Stroke="#FFA0A0A0" Fill="#FFA0A0A0" StrokeThickness="0.5"/>
                            <Popup x:Name="popup" Placement="Top" Width="200" Height="130" HorizontalOffset="-100" AllowsTransparency="True" VerticalOffset="-10">
                                <Border BorderThickness="1" Background="White" Margin="10" CornerRadius="5">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Color="#FF2D2D30" Opacity="0.4" ShadowDepth="0"/>
                                    </Border.Effect>
                                    <WrapPanel x:Name="wrapPanel">
                                        <ProgressBar x:Name="fx1"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Grid.Column="0" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy1"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy2"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy3"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy4"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy5"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy6"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy7"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy8"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy9"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy10"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy11"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy12"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy13"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy14"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy15"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy16"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy17"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy18"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy19"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy20"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                        <ProgressBar x:Name="fx1_Copy21"  BorderBrush="{x:Null}" Foreground="#FF3399FF" Background="WhiteSmoke" Maximum="0.1" Orientation="Vertical" Width="2" Height="{Binding ActualHeight, ElementName=wrapPanel, Mode=OneWay}" Margin="5,0,0,0" />
                                    </WrapPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <Border x:Name="Move" HorizontalAlignment="Left" Width="20" Height="20" Background="#00000000" CornerRadius="3" ToolTip="列表循环" BorderBrush="#00000000" Margin="5,0,0,0" MouseDown="Move_MouseDown">
                        <Path x:Name="MovePath" StrokeThickness="0" Margin="2" Fill="#FFA0A0A0" Stretch="Uniform" Data="M22.724,8.446L18.815,12.355C18.59,12.581,18.223,12.581,17.997,12.355L17.941,12.298 17.941,9.42C13.22,9.75 9.48,13.693 9.48,18.496 9.48,21.869 11.331,24.95 14.313,26.536 15.064,26.936 15.349,27.869 14.95,28.622 14.55,29.374 13.617,29.659 12.865,29.259 8.875,27.136 6.396,23.012 6.396,18.496 6.396,11.992 11.519,6.662 17.941,6.328L17.941,3.776 17.997,3.72C18.223,3.494,18.59,3.494,18.815,3.72L22.724,7.628C22.95,7.854,22.95,8.221,22.724,8.446z M20.497,32.618L16.589,28.71C16.363,28.484,16.363,28.118,16.589,27.892L20.497,23.984C20.723,23.758,21.09,23.758,21.316,23.984L21.371,24.041 21.372,26.918C26.092,26.589 29.833,22.646 29.833,17.843 29.833,14.47 27.981,11.389 25,9.803 24.248,9.403 23.963,8.469 24.362,7.717 24.763,6.965 25.697,6.679 26.449,7.08 30.438,9.203 32.917,13.327 32.917,17.843 32.917,24.347 27.794,29.677 21.372,30.01L21.372,32.561 21.316,32.618C21.09,32.844,20.723,32.844,20.497,32.618z"/>
                    </Border>
                </Grid>
                <Grid Margin="0,0,5,0" Grid.Column="1">
                    <Grid>
                        <Border x:Name="tx" BorderThickness="1" HorizontalAlignment="Left" Margin="1,2,0,3" Width="60" CornerRadius="5" MouseDown="tx_MouseDown" Height="60">
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Grid Background="#FFE6E6E6">
                                            <Path Margin="3" Data="M10.708,21.416C4.804,21.416,0,16.613,0,10.709C0,4.804,4.804,0,10.708,0s10.708,4.804,10.708,10.709
		C21.416,16.613,16.612,21.416,10.708,21.416z M10.708,1C5.355,1,1,5.355,1,10.709c0,5.353,4.355,9.707,9.708,9.707
		s9.708-4.354,9.708-9.707C20.416,5.355,16.061,1,10.708,1z M8.303,2.709c-0.089,0-0.175-0.048-0.22-0.132c-0.065-0.121-0.02-0.272,0.102-0.338c0.746-0.402,1.591-0.614,2.445-0.614
			c1.048,0,1.902,0.202,2.611,0.618c0.119,0.07,0.159,0.224,0.089,0.343c-0.071,0.12-0.224,0.158-0.342,0.089
			c-0.63-0.37-1.401-0.55-2.358-0.55c-0.771,0-1.535,0.191-2.208,0.554C8.384,2.699,8.343,2.709,8.303,2.709z M9.508,3.604c-0.089,0-0.175-0.048-0.22-0.132C9.222,3.35,9.268,3.198,9.39,3.133c0.389-0.208,0.831-0.318,1.278-0.318
			c0.548,0,0.995,0.105,1.367,0.323c0.119,0.07,0.159,0.223,0.089,0.342c-0.071,0.12-0.224,0.159-0.342,0.09
			c-0.292-0.172-0.657-0.255-1.114-0.255c-0.371,0-0.721,0.087-1.042,0.26C9.588,3.594,9.548,3.604,9.508,3.604z M10.708,14.041c-1.838,0-3.333-1.495-3.333-3.332c0-1.838,1.495-3.334,3.333-3.334s3.333,1.496,3.333,3.334
		C14.041,12.546,12.546,14.041,10.708,14.041z M10.708,8.375c-1.287,0-2.333,1.047-2.333,2.334c0,1.286,1.046,2.332,2.333,2.332
		s2.333-1.046,2.333-2.332C13.041,9.422,11.995,8.375,10.708,8.375z" Fill="#FF7C7C7C"/>
                                        </Grid>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                        <TextBlock x:Name="textBlock1" Margin="100,0,0,15" TextWrapping="Wrap" Foreground="#FF686868" Text="小萌音乐" MouseDown="textBlock1_MouseDown" Height="18"/>
                        <Slider x:Name="jd"  Margin="66,25,0,0" Style="{DynamicResource SliderStyle1}" MouseMove="jd_MouseMove" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{x:Null}" Height="15" />
                        <TextBlock x:Name="loading" HorizontalAlignment="Left" Height="18" Margin="66,0,0,3.187" TextWrapping="Wrap" Text="加载中..." VerticalAlignment="Bottom" Width="51" Foreground="#FF31C27C" Visibility="Collapsed"/>
                    </Grid>
                </Grid>
                <Border HorizontalAlignment="Left" Width="30" Height="20" Background="#00000000" CornerRadius="5" ToolTip="品质" BorderBrush="#FF31C27C" Margin="65,0,0,15" MouseDown="Border_MouseDown_8" Grid.Column="1" BorderThickness="1">
                    <TextBlock x:Name="pz" Foreground="#FF31C27C" Text="HQ" TextAlignment="Center" Margin="0,1,0,0"/>
                </Border>

            </Grid>
        </Border>
        <TextBlock x:Name="jz"  Width="100" Text="" Height="20" Foreground="#FFB4B4C1" FontSize="14" TextAlignment="Center" Visibility="Collapsed"/>
    </Grid>
</UserControl>
